name: W3C HTML Validation with Gemini Suggestions

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  validate-html:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Set report timestamp (Sri Lanka time)
        id: set-time
        run: |
          sudo timedatectl set-timezone Asia/Colombo
          echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_OUTPUT

      - name: Validate HTML files and collect messages
        run: |
          mkdir -p html-validation-report
          echo "🧪 W3C HTML Validation Summary" > html-validation-report/summary.txt
          echo "" > html-validation-report/messages-for-ai.txt

          for file in $(find . -name "*.html"); do
            echo "🔍 Validating: $file" | tee -a html-validation-report/summary.txt

            curl -s -H "Content-Type: text/html; charset=utf-8" \
              --data-binary @"$file" \
              "https://validator.w3.org/nu/?out=json" > html-validation-report/$(basename "$file").json

            ERRORS=$(jq '.messages | map(select(.type == "error")) | length' html-validation-report/$(basename "$file").json)
            WARNINGS=$(jq '.messages | map(select(.type == "info")) | length' html-validation-report/$(basename "$file").json)

            echo "$file: ❌ $ERRORS errors, ⚠️ $WARNINGS warnings" | tee -a html-validation-report/summary.txt

            jq -r '.messages[] | "\(.type | ascii_upcase): Line \(.lastLine // "N/A") Col \(.lastColumn // "N/A"): \(.message)"' \
              html-validation-report/$(basename "$file").json | tee -a html-validation-report/summary.txt | tee -a html-validation-report/messages-for-ai.txt

            echo "--------------------------------------" >> html-validation-report/summary.txt
          done

      - name: Ask Gemini for suggestions
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          RAW_MESSAGES=$(cat html-validation-report/messages-for-ai.txt)

          # Write prompt to file
          cat <<EOF > prompt.txt
These are W3C HTML validation messages (both errors and warnings).
For each message, provide a suggestion in this format:

ERROR: ...
🔧 Gemini AI Suggestion: ...

or

INFO: ...
🔧 Gemini AI Suggestion: ...

Messages:
$RAW_MESSAGES
EOF

          # Prepare JSON payload safely
          JSON_PAYLOAD=$(jq -n \
            --arg text "$(cat prompt.txt)" \
            '{ contents: [ { parts: [ { text: $text } ] } ], generationConfig: { temperature: 0.5 } }')

          # Send request to Gemini
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $GEMINI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent")

          # Extract response or fallback
          SUGGESTIONS=$(echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text // "⚠️ No suggestions returned by Gemini."')

          echo -e "\n\n🔧 Gemini AI Suggestions:" >> html-validation-report/summary.txt
          echo "$SUGGESTIONS" >> html-validation-report/summary.txt

      - name: Upload validation report
        uses: actions/upload-artifact@v4
        with:
          name: w3c-html-report-${{ steps.set-time.outputs.timestamp }}
          path: html-validation-report/
